openapi: 3.0.3
info:
  title: BaseAclEx API
  description: |
    Complete Access Control List (ACL) API built with Phoenix/Elixir
    
    This API provides comprehensive user, role, and permission management
    with JWT authentication and rate limiting capabilities.
    
    ## Features
    - User registration and authentication
    - JWT token-based security
    - Role-based access control (RBAC)
    - Permission management
    - Rate limiting
    - Device session management
    
    ## Authentication
    Most endpoints require a Bearer JWT token in the Authorization header:
    ```
    Authorization: Bearer <your_jwt_token>
    ```
    
    ## Rate Limiting
    API requests are rate limited per IP address and authenticated user.
    When rate limits are exceeded, you'll receive a 429 status code.
  version: 1.0.0
  contact:
    name: BaseAclEx API Support
    email: admin@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:4000/api/v1
    description: Development server
  - url: https://api.baseaclx.com/v1
    description: Production server

security:
  - BearerAuth: []

paths:
  # Authentication Endpoints
  /auth/register:
    post:
      tags: [Authentication]
      summary: Register a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '422':
          $ref: '#/components/responses/ValidationError'

  /auth/login:
    post:
      tags: [Authentication]
      summary: Authenticate user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /auth/me:
    get:
      tags: [Authentication]
      summary: Get current user
      responses:
        '200':
          description: Current user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users:
    get:
      tags: [Users]
      summary: List users
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 20
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'

  /users/{id}:
    get:
      tags: [Users]
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /roles:
    get:
      tags: [Roles]
      summary: List roles
      responses:
        '200':
          description: List of roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesListResponse'

    post:
      tags: [Roles]
      summary: Create role
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '201':
          description: Role created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleResponse'

  /permissions:
    get:
      tags: [Permissions]
      summary: List permissions
      responses:
        '200':
          description: List of permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsListResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - first_name
        - last_name
        - password
        - terms_accepted
      properties:
        email:
          type: string
          format: email
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
          minLength: 8
        password_confirmation:
          type: string
        terms_accepted:
          type: boolean

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    CreateRoleRequest:
      type: object
      required:
        - name
        - slug
      properties:
        name:
          type: string
        slug:
          type: string
        description:
          type: string
        priority:
          type: integer
        is_active:
          type: boolean
          default: true

    UserResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            email:
              type: string
            username:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            is_active:
              type: boolean
            inserted_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time

    LoginResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/UserResponse'
            tokens:
              type: object
              properties:
                access_token:
                  type: string
                refresh_token:
                  type: string
                expires_in:
                  type: integer

    RoleResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            slug:
              type: string
            description:
              type: string
            priority:
              type: integer
            is_active:
              type: boolean

    UsersListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        meta:
          $ref: '#/components/schemas/PaginationMeta'

    RolesListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RoleResponse'

    PermissionsListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              action:
                type: string
              resource:
                type: string
              description:
                type: string

    PaginationMeta:
      type: object
      properties:
        current_page:
          type: integer
        per_page:
          type: integer
        total_entries:
          type: integer
        total_pages:
          type: integer
        has_next_page:
          type: boolean
        has_prev_page:
          type: boolean

    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: string